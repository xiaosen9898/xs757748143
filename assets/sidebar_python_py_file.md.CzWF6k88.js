import{_ as i,c as a,a2 as l,o as n}from"./chunks/framework.D3LXhGAZ.js";const c=JSON.parse('{"title":"文件操作","description":"","frontmatter":{},"headers":[],"relativePath":"sidebar/python/py/file.md","filePath":"sidebar/python/py/file.md"}'),e={name:"sidebar/python/py/file.md"};function p(t,s,h,o,r,k){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="文件操作" tabindex="-1">文件操作 <a class="header-anchor" href="#文件操作" aria-label="Permalink to &quot;文件操作&quot;">​</a></h1><h2 id="file方法" tabindex="-1">File方法 <a class="header-anchor" href="#file方法" aria-label="Permalink to &quot;File方法&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><h4 id="_1-open-方法" tabindex="-1">1. open() 方法 <a class="header-anchor" href="#_1-open-方法" aria-label="Permalink to &quot;1. open() 方法&quot;">​</a></h4><ol><li><p>语法：<code>open(file, mode=&#39;r&#39;)</code></p></li><li><p>作用：</p></li></ol><blockquote><ol><li>open() 方法用于打开一个文件，并返回文件对象</li><li>如果该文件无法被打开，会抛出 OSError</li></ol></blockquote><ol start="3"><li>参数：</li></ol><blockquote><ol><li><code>file</code>: 必需，文件路径（相对或者绝对路径）</li><li><code>mode</code>: 可选，文件打开模式</li><li><code>buffering</code>：设置缓冲</li><li><code>encoding</code>: 一般使用utf8</li><li><code>errors</code>: 报错级别</li><li><code>newline</code>: 区分换行符</li><li><code>closefd:</code>: 传入的file参数类型</li><li><code>opener</code>: 设置自定义开启器，开启器的返回值必须是一个打开的文件描述符</li></ol></blockquote><ol start="4"><li>file 对象</li></ol><blockquote><ol><li><code>file.close()</code>: 关闭文件对象，释放系统资源并确保文件内容被正确保存</li></ol><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 with 语句（推荐方法）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;w&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.write(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不需要显式调用 file.close()，文件会自动关闭</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;example.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;w&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 写入数据</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.write(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 强制将缓冲区内容写入文件</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.flush()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在这里可以继续进行其他操作，但数据已经被写入磁盘</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.write(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;This is a test.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.close()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></blockquote><ul><li>注意：使用 open() 方法一定要保证关闭文件对象，即调用 close() 方法</li></ul></div><p> </p><h2 id="os-文件-目录方法" tabindex="-1">OS 文件/目录方法 <a class="header-anchor" href="#os-文件-目录方法" aria-label="Permalink to &quot;OS 文件/目录方法&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p></div>`,6)]))}const u=i(e,[["render",p]]);export{c as __pageData,u as default};
