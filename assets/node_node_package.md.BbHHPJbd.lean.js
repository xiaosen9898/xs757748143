import{_ as o,c as e,a2 as i,o as a}from"./chunks/framework.D3LXhGAZ.js";const h=JSON.parse('{"title":"包管理工具","description":"","frontmatter":{},"headers":[],"relativePath":"node/node/package.md","filePath":"node/node/package.md"}'),s={name:"node/node/package.md"};function n(t,l,c,d,r,p){return a(),e("div",null,l[0]||(l[0]=[i(`<h1 id="包管理工具" tabindex="-1">包管理工具 <a class="header-anchor" href="#包管理工具" aria-label="Permalink to &quot;包管理工具&quot;">​</a></h1><h2 id="npm-的使用" tabindex="-1">npm 的使用 <a class="header-anchor" href="#npm-的使用" aria-label="Permalink to &quot;npm 的使用&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><h4 id="_1-概念" tabindex="-1">1. 概念 <a class="header-anchor" href="#_1-概念" aria-label="Permalink to &quot;1. 概念&quot;">​</a></h4><blockquote><ul><li>npm 是 node 的包管理工具，它的出现是为了解决 Node 中第三方包共享的问题</li></ul></blockquote><p> </p><h4 id="_2-安装" tabindex="-1">2. 安装 <a class="header-anchor" href="#_2-安装" aria-label="Permalink to &quot;2. 安装&quot;">​</a></h4><blockquote><ul><li>npm 在安装 node 时就自动安装了</li></ul></blockquote><p> </p><h4 id="_3-使用步骤" tabindex="-1">3. 使用步骤 <a class="header-anchor" href="#_3-使用步骤" aria-label="Permalink to &quot;3. 使用步骤&quot;">​</a></h4><blockquote><ol><li>打开项目的命令小黑窗；</li><li>初始化：</li></ol><blockquote><ol><li><code>npm init</code>：生成了一个 package.json 文件</li><li><code>npm init -y</code>：快速创建</li></ol></blockquote><ol start="3"><li>查找工具包：去 npmjs.com 网站 搜索 关键字 date 找到合适的格式化日期包；</li><li>安装工具包：npm install 包名称，（包名称@版本号 可以指定包下载）；</li><li>引入并使用：通过 require 引入并使用第三方包；</li><li>删除依赖：</li></ol><blockquote><ol><li>局部删除：<code>npm r 依赖名</code> or <code>npm remove 依赖名</code></li><li>全局删除：<code>npm remove -g 依赖名</code></li></ol></blockquote></blockquote><p> </p><h4 id="_4-文件说明" tabindex="-1">4. 文件说明 <a class="header-anchor" href="#_4-文件说明" aria-label="Permalink to &quot;4. 文件说明&quot;">​</a></h4><blockquote><ol><li><code>node_modules</code>，依赖包，下载的第三方模块放置的路径（注意：不要随意删除里面的文件）</li></ol><blockquote><ol><li>生产依赖：<code>npm i 包名 --save</code>，开发和生产阶段都要用的</li><li>开发依赖：<code>npm i 包名 --save-dev</code>，开发阶段使用的依赖</li></ol></blockquote><ol start="2"><li><code>package.json</code>：保存文件基本信息</li><li><code>package-lock.json</code>：保存模块信息，使用 npm 下载第三方模块时自动生成的文件</li></ol></blockquote><p> </p><h4 id="_5-安装类型" tabindex="-1">5. 安装类型 <a class="header-anchor" href="#_5-安装类型" aria-label="Permalink to &quot;5. 安装类型&quot;">​</a></h4><blockquote><ol><li>环境：</li></ol><blockquote><ol><li>生产依赖包：<code>npm i --save 包名</code> or <code>npm i -S 包名</code></li></ol><blockquote><ul><li>开发的时候需要使用，部署上线也要使用，如 axios；</li><li>默认的包的类型,可以省略不写，也可以简写为-S</li></ul></blockquote><ol start="2"><li>开发依赖包：<code>npm i --save-dev 包名</code> or <code>npm i -D 包名</code></li></ol><blockquote><ul><li>开发的时候需要使用，部署上线不再需要使用，简写为 -D</li></ul></blockquote></blockquote><p> </p><ol start="2"><li>范围：</li></ol><blockquote><ol><li>局部安装：<code>npm i 包名</code></li></ol><blockquote><ul><li>包安装在当前项目的根目录下的 node_modules 中；</li><li>要通过 require 引入使用的就需要局部安装</li></ul></blockquote><ol start="2"><li>全局安装：<code>npm i 包名 -g</code></li></ol><blockquote><ul><li>包被安装到了全局的 node_modules 中；</li><li>要用到该包的命令执行任务的就需要全局安装</li></ul></blockquote></blockquote><p> </p><ol start="3"><li>指定版本：<code>npm i 包名@版本号</code></li></ol></blockquote><p> </p><h4 id="_6-npm-卸载包" tabindex="-1">6. npm 卸载包 <a class="header-anchor" href="#_6-npm-卸载包" aria-label="Permalink to &quot;6. npm 卸载包&quot;">​</a></h4><blockquote><ol><li>本地包：</li></ol><blockquote><ol><li>进入到你想要卸载的包所在的文件夹，到 package.json 这一层即可；</li><li>打开 cmd 小黑窗；</li><li>在小黑窗中执行<code>npm uninstall 包名</code>，简写：<code>npm un 包名</code></li></ol></blockquote></blockquote><blockquote><ol start="2"><li>全局包：</li></ol><blockquote><ol><li>在任意地方打开小黑窗；</li><li>输入<code>npm uninstall 全局包名 -g </code>，简写：<code>npm un 全局包名 -g</code></li></ol></blockquote></blockquote><p> </p><h4 id="_7-配置命令别名" tabindex="-1">7. 配置命令别名 <a class="header-anchor" href="#_7-配置命令别名" aria-label="Permalink to &quot;7. 配置命令别名&quot;">​</a></h4><blockquote><ol><li>在 package.json 文件中配置：</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node ./server.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node ./index.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></blockquote><blockquote><ol start="2"><li>配置完成后：</li></ol><blockquote><ul><li>使用：<code>npm run server</code>，运行 server.js 文件</li><li>使用：<code>npm run start</code>，运行 index.js 文件， 使用‘start’可以省略‘run’：<code>npm start</code></li></ul></blockquote></blockquote><p> </p><h4 id="_8-node-查找包的顺序" tabindex="-1">8. node 查找包的顺序 <a class="header-anchor" href="#_8-node-查找包的顺序" aria-label="Permalink to &quot;8. node 查找包的顺序&quot;">​</a></h4><blockquote><ul><li>require(&quot;moment&quot;)</li></ul></blockquote><blockquote><ol><li>查找是否有内置模块 moment；</li><li>查找当前目录的 node_modules 中是否有 moment</li><li>依次查找上级目录的 node_modules 中是否有 moment，直到根目录</li></ol></blockquote></div><p> </p><h2 id="npm-配置淘宝镜像-推荐" tabindex="-1">npm 配置淘宝镜像（推荐） <a class="header-anchor" href="#npm-配置淘宝镜像-推荐" aria-label="Permalink to &quot;npm 配置淘宝镜像（推荐）&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>作用：提高包的下载速度</li><li>工具配置（推荐）：</li></ol><blockquote><ol><li>安装 nrm：<code>npm i -g nrm</code>；</li><li>修改镜像：<code>nrm use taobao</code>；</li><li>检查是否配置成功：</li></ol><blockquote><ol><li>命令：<code>npm config list</code>；</li><li>出现 “The registry has been changed to &#39;taobao&#39;.” 即切换成功</li><li>其他命令；</li></ol></blockquote><blockquote><ul><li>查看镜像源列表：<code>nrm ls</code></li><li>切回官方服务源：<code>nrm use npm</code>，往 npm 官方上传包时需要切回 npm</li></ul></blockquote></blockquote></div><p> </p><h2 id="yarn-包管理工具" tabindex="-1">yarn 包管理工具 <a class="header-anchor" href="#yarn-包管理工具" aria-label="Permalink to &quot;yarn 包管理工具&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>作用：也是一个包管理工具，速度更快</li><li>全局安装：<code>npm i yarn -g</code></li><li>常用命令：</li></ol><blockquote><ul><li>初始化：<code>yarn init</code> or <code>yarn init -y</code>；</li><li>安装包：<code>yarn add 包名</code>；</li><li>删除包：<code>yarn remove</code> or <code>yarn global remove</code>；</li><li>安装项目依赖：<code>yarn</code>；</li><li>运行命令别名：<code>yarn &lt;别名&gt; # 不需要添加 run</code>；</li></ul></blockquote></div><p> </p><h2 id="nodemon" tabindex="-1">nodemon <a class="header-anchor" href="#nodemon" aria-label="Permalink to &quot;nodemon&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>作用：能够使用 nodemon 来启动 web 服务器并监听文件修改了可以自动重启服务器</li><li>全局安装：<code>npm install nodemon -g</code></li><li>常用命令：<code>nodemon js文件名</code></li><li>常见错误：出现系统禁止执行 nodemon.ps1 文件的错误</li></ol><blockquote><ul><li>常见错误：以管理员身份运行 PowerShell，执行：get-ExecutionPolicy，回复 Restricted，表示状态是禁止的，执行：set-ExecutionPolicy RemoteSigned，输入 Y</li></ul></blockquote></div><p> </p><h2 id="nvm" tabindex="-1">nvm <a class="header-anchor" href="#nvm" aria-label="Permalink to &quot;nvm&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>作用：用来管理 node 版本的工具，方便切换不同版本的 Node.js</p></li><li><p>使用：</p></li></ol><blockquote><ol><li>下载安装：选择<code>nvm-setup.exe</code>下载，<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noreferrer">下载地址</a></li><li>修改 nvm 源（如果直接用 nvm 命令下载 node 的话，因为源在国外，所以会导致下载失败）：</li></ol><blockquote><ol><li>打开 nvm 的下载路径（如果你是一路 next 的，那么一般就在：C:\\Users\\用户名\\AppData\\Roaming\\nvm）；</li><li>打开 setting.txt 文件，在末尾写入：</li></ol><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>node_mirror: https://npm.taobao.org/mirrors/node/</span></span>
<span class="line"><span>npm_mirror: https://npm.taobao.org/mirrors/npm/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote><ol start="3"><li>修改 npm 源（默认 npm 的源是指向 npm 官网的，这就导致我们在下载包的时候会很慢）：</li></ol><blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry=https://registry.npm.taobao.org</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote></blockquote><ol start="3"><li>常用命令：</li></ol><blockquote><ul><li><code>nvm list</code>：显示已安装的版本</li><li><code>nvm list available</code>：显示所有可以下载的 Node.js 版本</li><li><code>nvm install 16.20.2</code>：安装 16.20.2 版本的 Node.js</li><li><code>nvm install latest</code>：安装最新版的 Node.js</li><li><code>nvm uninstall 16.20.2</code>：删除某个版本的 Node.js</li><li><code>nvm use 16.20.2</code>：切换 16.20.2 的 Node.js</li></ul></blockquote></div>`,15)]))}const k=o(s,[["render",n]]);export{h as __pageData,k as default};
