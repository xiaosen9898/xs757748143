import{_ as s,c as a,a2 as i,o as n}from"./chunks/framework.D3LXhGAZ.js";const c=JSON.parse('{"title":"DOM 事件","description":"","frontmatter":{},"headers":[],"relativePath":"webApi/webapi/domEvent.md","filePath":"webApi/webapi/domEvent.md"}'),e={name:"webApi/webapi/domEvent.md"};function d(l,t,r,p,h,o){return n(),a("div",null,t[0]||(t[0]=[i(`<h1 id="dom-事件" tabindex="-1">DOM 事件 <a class="header-anchor" href="#dom-事件" aria-label="Permalink to &quot;DOM 事件&quot;">​</a></h1><h2 id="事件监听" tabindex="-1">事件监听 <a class="header-anchor" href="#事件监听" aria-label="Permalink to &quot;事件监听&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>语法：<code>dom.addEventListener(&#39;事件类型&#39;，function(){ })</code></p></li><li><p>旧语法：<code>dom.on事件类型 = function(){ }</code></p></li><li><p>时机：</p></li></ol><blockquote><ol><li>事件注册时机；</li><li>事件触发时期</li></ol></blockquote><ol start="4"><li>移除事件：<code>dom.removeEventListener(&#39;事件类型&#39;，要移除的同一个事件处理程序)</code></li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handler1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 处理函数1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handler2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 处理函数2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dom.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, handler1);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dom.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, handler2);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dom.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, handler1); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 移除监听函数1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></div><p> </p><h2 id="事件类型" tabindex="-1">事件类型 <a class="header-anchor" href="#事件类型" aria-label="Permalink to &quot;事件类型&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><h3 id="鼠标事件" tabindex="-1">鼠标事件 <a class="header-anchor" href="#鼠标事件" aria-label="Permalink to &quot;鼠标事件&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>作用</th></tr></thead><tbody><tr><td>click</td><td>点击发生变化</td></tr><tr><td>dbclick</td><td>双击发生变化</td></tr><tr><td>focus</td><td>点击文本框会获得焦点发生</td></tr><tr><td>blur</td><td>失去焦点发生变化</td></tr><tr><td>mouseenter</td><td>鼠标移入</td></tr><tr><td>mouseleave</td><td>鼠标移出</td></tr><tr><td>mouseover</td><td>鼠标经过会发生变化，类似 hover 效果</td></tr><tr><td>mouseup</td><td>按键按下去并释放松开会发生变化</td></tr><tr><td>mousedown</td><td>鼠标按键按下去会发生变化</td></tr><tr><td>resize</td><td>当窗口发生大小变换的时候就会执行</td></tr><tr><td>keydown</td><td>按下键盘时会发生变化</td></tr><tr><td>keyup</td><td>按下键盘再抬起时会发生变化</td></tr><tr><td>input</td><td>输入事件</td></tr><tr><td>scroll</td><td>滚动事件</td></tr></tbody></table><p> </p><h3 id="表单事件" tabindex="-1">表单事件 <a class="header-anchor" href="#表单事件" aria-label="Permalink to &quot;表单事件&quot;">​</a></h3><table><thead><tr><th>事件名</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>submit</td><td>表单被提交时触发</td><td>注册到 form 元素上</td></tr><tr><td>input</td><td>文本框改变后立即出发</td><td>注册到 input、textarea 上</td></tr><tr><td>change</td><td>文本框改变后、失去焦点时触发<br>下拉列表、多选框、单选框改变后立即触发</td><td>注册到 input、select、textarea 上</td></tr><tr><td>reset</td><td>表单被重置时触发</td><td>注册到 form 元素上</td></tr><tr><td>focus</td><td>元素聚焦时触发</td><td></td></tr><tr><td>blur</td><td>元素失去焦点时触发</td><td></td></tr></tbody></table></div>`,6)]))}const b=s(e,[["render",d]]);export{c as __pageData,b as default};
