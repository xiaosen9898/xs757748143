import{_ as i,c as a,a4 as l,o as n}from"./chunks/framework.BvVMNBiX.js";const c=JSON.parse('{"title":"包管理工具","description":"","frontmatter":{},"headers":[],"relativePath":"engineering/eng/package.md","filePath":"engineering/eng/package.md"}'),e={name:"engineering/eng/package.md"};function t(p,s,o,h,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="包管理工具" tabindex="-1">包管理工具 <a class="header-anchor" href="#包管理工具" aria-label="Permalink to &quot;包管理工具&quot;">​</a></h1><h2 id="npm-的使用" tabindex="-1">npm 的使用 <a class="header-anchor" href="#npm-的使用" aria-label="Permalink to &quot;npm 的使用&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><h4 id="_1-概念" tabindex="-1">1. 概念 <a class="header-anchor" href="#_1-概念" aria-label="Permalink to &quot;1. 概念&quot;">​</a></h4><blockquote><ul><li>npm 是 node 的包管理工具，它的出现是为了解决 Node 中第三方包共享的问题</li></ul></blockquote><p> </p><h4 id="_2-安装" tabindex="-1">2. 安装 <a class="header-anchor" href="#_2-安装" aria-label="Permalink to &quot;2. 安装&quot;">​</a></h4><blockquote><ul><li>npm 在安装 node 时就自动安装了</li></ul></blockquote><p> </p><h4 id="_3-使用步骤" tabindex="-1">3. 使用步骤 <a class="header-anchor" href="#_3-使用步骤" aria-label="Permalink to &quot;3. 使用步骤&quot;">​</a></h4><blockquote><ol><li>打开项目的命令小黑窗；</li><li>初始化：</li></ol><blockquote><ol><li><code>npm init</code>：生成了一个 package.json 文件</li><li><code>npm init -y</code>：快速创建</li></ol></blockquote><ol start="3"><li>查找工具包：去 npmjs.com 网站 搜索 关键字 date 找到合适的格式化日期包；</li><li>安装工具包：npm install 包名称，（包名称@版本号 可以指定包下载）；</li><li>引入并使用：通过 require 引入并使用第三方包；</li><li>删除依赖：</li></ol><blockquote><ol><li>局部删除：<code>npm r 依赖名</code> or <code>npm remove 依赖名</code></li><li>全局删除：<code>npm remove -g 依赖名</code></li></ol></blockquote></blockquote><p> </p><h4 id="_4-文件说明" tabindex="-1">4. 文件说明 <a class="header-anchor" href="#_4-文件说明" aria-label="Permalink to &quot;4. 文件说明&quot;">​</a></h4><blockquote><ol><li><code>node_modules</code>，依赖包，下载的第三方模块放置的路径（注意：不要随意删除里面的文件）</li></ol><blockquote><ol><li>生产依赖：<code>npm i 包名 --save</code>，开发和生产阶段都要用的</li><li>开发依赖：<code>npm i 包名 --save-dev</code>，开发阶段使用的依赖</li></ol></blockquote><ol start="2"><li><code>package.json</code>：配置文件，保存文件基本信息</li><li><code>package-lock.json</code>：保存模块信息，使用 npm 下载第三方模块时自动生成的文件</li></ol></blockquote><p> </p><h4 id="_5-安装类型" tabindex="-1">5. 安装类型 <a class="header-anchor" href="#_5-安装类型" aria-label="Permalink to &quot;5. 安装类型&quot;">​</a></h4><blockquote><ol><li>环境：</li></ol><blockquote><ol><li>生产依赖包：<code>npm i --save 包名</code> or <code>npm i -S 包名</code></li></ol><blockquote><ul><li>开发的时候需要使用，部署上线也要使用，如 axios；</li><li>默认的包的类型,可以省略不写，也可以简写为-S</li></ul></blockquote><ol start="2"><li>开发依赖包：<code>npm i --save-dev 包名</code> or <code>npm i -D 包名</code></li></ol><blockquote><ul><li>开发的时候需要使用，部署上线不再需要使用，简写为 -D</li></ul></blockquote></blockquote><p> </p><ol start="2"><li>范围：</li></ol><blockquote><ol><li>局部安装：<code>npm i 包名</code></li></ol><blockquote><ul><li>包安装在当前项目的根目录下的 node_modules 中；</li><li>要通过 require 引入使用的就需要局部安装</li></ul></blockquote><ol start="2"><li>全局安装：<code>npm i 包名 -g</code></li></ol><blockquote><ul><li>包被安装到了全局的 node_modules 中；</li><li>要用到该包的命令执行任务的就需要全局安装</li></ul></blockquote></blockquote><p> </p><ol start="3"><li>指定版本：<code>npm i 包名@版本号</code></li></ol></blockquote><p> </p><h4 id="_6-npm-卸载包" tabindex="-1">6. npm 卸载包 <a class="header-anchor" href="#_6-npm-卸载包" aria-label="Permalink to &quot;6. npm 卸载包&quot;">​</a></h4><blockquote><ol><li>本地包：</li></ol><blockquote><ol><li>进入到你想要卸载的包所在的文件夹，到 package.json 这一层即可；</li><li>打开 cmd 小黑窗；</li><li>在小黑窗中执行<code>npm uninstall 包名</code>，简写：<code>npm un 包名</code></li></ol></blockquote></blockquote><blockquote><ol start="2"><li>全局包：</li></ol><blockquote><ol><li>在任意地方打开小黑窗；</li><li>输入<code>npm uninstall 全局包名 -g </code>，简写：<code>npm un 全局包名 -g</code></li></ol></blockquote></blockquote><p> </p><h4 id="_7-配置命令别名" tabindex="-1">7. 配置命令别名 <a class="header-anchor" href="#_7-配置命令别名" aria-label="Permalink to &quot;7. 配置命令别名&quot;">​</a></h4><blockquote><ol><li>在 package.json 文件中配置：</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node ./server.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node ./index.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></blockquote><blockquote><ol start="2"><li>配置完成后：</li></ol><blockquote><ul><li>使用：<code>npm run server</code>，运行 server.js 文件</li><li>使用：<code>npm run start</code>，运行 index.js 文件， 使用‘start’可以省略‘run’：<code>npm start</code></li></ul></blockquote></blockquote><p> </p><h4 id="_8-node-查找包的顺序" tabindex="-1">8. node 查找包的顺序 <a class="header-anchor" href="#_8-node-查找包的顺序" aria-label="Permalink to &quot;8. node 查找包的顺序&quot;">​</a></h4><blockquote><ul><li>require(&quot;moment&quot;)</li></ul></blockquote><blockquote><ol><li>查找是否有内置模块 moment；</li><li>查找当前目录的 node_modules 中是否有 moment</li><li>依次查找上级目录的 node_modules 中是否有 moment，直到根目录</li></ol></blockquote><p> </p><h4 id="_9-依赖的语义版本" tabindex="-1">9. 依赖的语义版本 <a class="header-anchor" href="#_9-依赖的语义版本" aria-label="Permalink to &quot;9. 依赖的语义版本&quot;">​</a></h4><table><thead><tr><th>符号</th><th>描述</th><th>示例</th><th>示例描述</th></tr></thead><tbody><tr><td>&gt;</td><td>大于某个版本</td><td>&gt;1.2.1</td><td>大于1.2.1版本</td></tr><tr><td>&gt;=</td><td>大于等于某个版本</td><td>&gt;=1.2.1</td><td>大于等于1.2.1版本</td></tr><tr><td>&lt;</td><td>小于某个版本</td><td>&lt;1.2.1</td><td>小于1.2.1版本</td></tr><tr><td>&lt;=</td><td>小于等于某个版本</td><td>&lt;=1.2.1</td><td>小于等于1.2.1版本</td></tr><tr><td>-</td><td>介于两个版本之间</td><td>1.2.1 - 1.4.5</td><td>介于1.2.1和1.4.5之间</td></tr><tr><td>x</td><td>不固定的版本号</td><td>1.3.x</td><td>只要保证主版本号是1，次版本号是3即可</td></tr><tr><td>~</td><td>补丁版本号可增</td><td>~1.3.4</td><td>保证主版本号是1，次版本号是3，补丁版本号大于等于4</td></tr><tr><td>^</td><td>此版本和补丁版本可增</td><td>^1.3.4</td><td>保证主版本号是1，次版本号可以大于等于3，补丁版本号可以大于等于4</td></tr><tr><td>*</td><td>最新版本</td><td>*</td><td>始终安装最新版本</td></tr></tbody></table><p> </p><h4 id="_10-运行环境配置" tabindex="-1">10. 运行环境配置 <a class="header-anchor" href="#_10-运行环境配置" aria-label="Permalink to &quot;10. 运行环境配置&quot;">​</a></h4><ol><li><p>环境：代码运行环境一般为：开发环境、生产环境、测试环境</p></li><li><p>配置：利用 node 的<code>process.env.NODE_ENV</code>，在配置文件中配置启动命令</p></li></ol><blockquote><ol><li>通常，我们通过系统变量 NODE_ENV 的值，来判定 node 程序处于何种环境</li><li>有两种方式设置 NODE_ENV 的值（永久设置、临时设置），一般使用临时设置</li><li>为了避免不同系统的设置方式的差异，可以使用第三方库 cross-env 对环境变量进行设置</li></ol><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;index.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cross-env NODE_ENV=development node index.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cross-env NODE_ENV=production node index.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cross-env NODE_ENV=test node index.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;license&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ISC&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;cross-env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^6.0.3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></blockquote></div><p> </p><h2 id="npm-其他命令" tabindex="-1">npm 其他命令 <a class="header-anchor" href="#npm-其他命令" aria-label="Permalink to &quot;npm 其他命令&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-hjau-" id="tab-jAbhmg4" checked><label data-title="安装" for="tab-jAbhmg4">安装</label><input type="radio" name="group-hjau-" id="tab-7uES4AJ"><label data-title="查询" for="tab-7uES4AJ">查询</label><input type="radio" name="group-hjau-" id="tab-W9AZKDK"><label data-title="更新" for="tab-W9AZKDK">更新</label><input type="radio" name="group-hjau-" id="tab-Kro73JD"><label data-title="卸载" for="tab-Kro73JD">卸载</label><input type="radio" name="group-hjau-" id="tab-8VNt5pI"><label data-title="npm 配置" for="tab-8VNt5pI">npm 配置</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 精确安装最新版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-exact</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 安装指定版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名@版本号</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查询包安装路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-g]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查看包信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> view</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 包名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [子信息]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## view aliases：v info show</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查询安装包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-g] [--depth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">依赖深度]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## list aliases: ls  la  ll</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 检查有哪些包需要更新</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> outdated</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 更新包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-g] [包名]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## update 别名（aliases）：up、upgrade</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-g] 包名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## uninstall aliases: remove, rm, r, un, unlink</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 安装好npm之后，最终会产生两个配置文件，一个是用户配置，一个是系统配置；</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 当两个文件的配置项有冲突的时候，用户配置会覆盖系统配置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 通过下面的命令可以查询目前生效的各种配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-l] [--json]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 获取某个配置项</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 配置项</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 设置某个配置项</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 配置项=值</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 移除某个配置项</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 配置项</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></div></div></div><p> </p><h2 id="npm-配置淘宝镜像-推荐" tabindex="-1">npm 配置淘宝镜像（推荐） <a class="header-anchor" href="#npm-配置淘宝镜像-推荐" aria-label="Permalink to &quot;npm 配置淘宝镜像（推荐）&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>背景：由于 npm 的官方 registry 服务器位于国外，可能受网速影响导致下载缓慢或失败。因此，安装好 npm 之后，需要重新设置 registry 的地址为国内地址</li><li>作用：提高包的下载速度</li><li>工具配置（推荐）：</li></ol><blockquote><ol><li>安装 nrm：<code>npm i -g nrm</code>；</li><li>修改镜像：<code>nrm use taobao</code>；</li><li>检查是否配置成功：</li></ol><blockquote><ol><li>命令：<code>npm config list</code>；</li><li>出现 “The registry has been changed to &#39;taobao&#39;.” 即切换成功</li><li>其他命令；</li></ol></blockquote><blockquote><ul><li>查看镜像源列表：<code>nrm ls</code></li><li>切回官方服务源：<code>nrm use npm</code>，往 npm 官方上传包时需要切回 npm</li></ul></blockquote></blockquote></div><p> </p><h2 id="yarn-包管理工具" tabindex="-1">yarn 包管理工具 <a class="header-anchor" href="#yarn-包管理工具" aria-label="Permalink to &quot;yarn 包管理工具&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>作用：也是一个包管理工具，速度更快</li><li>优势：</li></ol><blockquote><ol><li>使用扁平的目录结构</li><li>并行下载</li><li>使用本地缓存</li><li>控制台仅输出关键信息</li><li>使用 yanr-lock 文件记录确切依赖</li></ol></blockquote><ol start="3"><li>增强</li></ol><blockquote><ol><li>增加了某些功能强大的命令</li><li>让既有的命令更加语义化</li><li>本地安装的 CLI 工具可以使用 yarn 直接启动</li><li>将全局安装的目录当作一个普通的工程，生成 package.json 文件，便于全局安装移植</li></ol></blockquote><ol start="4"><li>全局安装：<code>npm i yarn -g</code></li><li>常用命令：</li></ol><blockquote><ul><li>初始化：<code>yarn init</code> or <code>yarn init -y</code>；</li><li>安装包：<code>yarn add 包名</code>；</li><li>删除包：<code>yarn remove</code> or <code>yarn global remove</code>；</li><li>安装项目依赖：<code>yarn</code>；</li><li>运行命令别名：<code>yarn &lt;别名&gt; # 不需要添加 run</code>；</li></ul></blockquote><p>说明：npm6 之后，可以说 npm 已经和 yarn 非常接近，甚至没有差距了</p></div><p> </p><h2 id="pnpm-包管理工具" tabindex="-1">pnpm 包管理工具 <a class="header-anchor" href="#pnpm-包管理工具" aria-label="Permalink to &quot;pnpm 包管理工具&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>作用：一种新起的包管理器</li><li>优势：</li></ol><blockquote><ol><li>安装效率高</li><li>极其简洁的 node_modules 目录</li><li>避免了开发时使用间接依赖的问题</li><li>能极大的降低磁盘空间的占用</li></ol></blockquote><ol start="3"><li><p>全局安装 pnpm：<code>npm i pnpm -g</code></p></li><li><p>使用：只需要把 npm 替换为 pnpm 即可</p></li><li><p>pnpm 原理：</p></li></ol><blockquote><ol><li>同 yarn 和 npm 一样，pnpm 仍然使用缓存来保存已经安装过的包，以及使用 pnpm-lock.yaml 来记录详细的依赖版本</li><li>不同于 yarn 和 npm， pnpm 使用<strong>符号链接和硬链接</strong>（可将它们想象成快捷方式）的做法来放置依赖，从而规避了从缓存中拷贝文件的时间，使得安装和卸载的速度更快</li><li>由于使用了<strong>符号链接和硬链接</strong>，pnpm 可以规避 windows 操作系统路径过长的问题，因此，它选择使用树形的依赖结果，有着几乎完美的依赖管理。也因为如此，项目中只能使用直接依赖，而不能使用间接依赖</li></ol></blockquote></div><p> </p><h2 id="nvm" tabindex="-1">nvm <a class="header-anchor" href="#nvm" aria-label="Permalink to &quot;nvm&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>作用：用来管理 node 版本的工具，方便切换不同版本的 Node.js</p></li><li><p>使用：</p></li></ol><blockquote><ol><li>下载安装：选择<code>nvm-setup.exe</code>下载，<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noreferrer">下载地址</a></li><li>修改 nvm 源（如果直接用 nvm 命令下载 node 的话，因为源在国外，所以会导致下载失败）：</li></ol><blockquote><ol><li>打开 nvm 的下载路径（如果你是一路 next 的，那么一般就在：C:\\Users\\用户名\\AppData\\Roaming\\nvm）；</li><li>打开 setting.txt 文件，在末尾写入：</li></ol><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>node_mirror: https://npm.taobao.org/mirrors/node/</span></span>
<span class="line"><span>npm_mirror: https://npm.taobao.org/mirrors/npm/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote><ol start="3"><li>修改 npm 源（默认 npm 的源是指向 npm 官网的，这就导致我们在下载包的时候会很慢）：</li></ol><blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry=https://registry.npm.taobao.org</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote></blockquote><ol start="3"><li>常用命令：</li></ol><blockquote><ul><li><code>nvm list</code>：显示已安装的版本</li><li><code>nvm list available</code>：显示所有可以下载的 Node.js 版本</li><li><code>nvm install 16.20.2</code>：安装 16.20.2 版本的 Node.js</li><li><code>nvm install latest</code>：安装最新版的 Node.js</li><li><code>nvm uninstall 16.20.2</code>：删除某个版本的 Node.js</li><li><code>nvm use 16.20.2</code>：切换 16.20.2 的 Node.js</li></ul></blockquote></div>`,18)]))}const u=i(e,[["render",t]]);export{c as __pageData,u as default};
