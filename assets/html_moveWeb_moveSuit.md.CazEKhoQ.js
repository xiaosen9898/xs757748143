import{_ as o,c as e,a4 as i,o as t}from"./chunks/framework.BvVMNBiX.js";const n=JSON.parse('{"title":"移动适配","description":"","frontmatter":{},"headers":[],"relativePath":"html/moveWeb/moveSuit.md","filePath":"html/moveWeb/moveSuit.md"}'),a={name:"html/moveWeb/moveSuit.md"};function r(c,l,s,b,u,m){return t(),e("div",null,l[0]||(l[0]=[i('<h1 id="移动适配" tabindex="-1">移动适配 <a class="header-anchor" href="#移动适配" aria-label="Permalink to &quot;移动适配&quot;">​</a></h1><h2 id="移动端屏幕适配" tabindex="-1">移动端屏幕适配 <a class="header-anchor" href="#移动端屏幕适配" aria-label="Permalink to &quot;移动端屏幕适配&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><h4 id="_1-屏幕适配" tabindex="-1">1. 屏幕适配： <a class="header-anchor" href="#_1-屏幕适配" aria-label="Permalink to &quot;1. 屏幕适配：&quot;">​</a></h4><blockquote><p>根据设计稿开发网页，随着屏幕的变化，元素 size 也按比例变化</p></blockquote><h4 id="_2-主要技术" tabindex="-1">2. 主要技术： <a class="header-anchor" href="#_2-主要技术" aria-label="Permalink to &quot;2. 主要技术：&quot;">​</a></h4><blockquote><ol><li><h6 id="vw-主流" tabindex="-1">VW（主流）： <a class="header-anchor" href="#vw-主流" aria-label="Permalink to &quot;VW（主流）：&quot;">​</a></h6></li></ol><blockquote><ol><li>vw 是相对长度单位；</li><li>100vw = 屏幕的宽度；</li><li>计算公式；</li></ol><blockquote><ol><li>设计稿宽度/设计稿中元素宽度 = 手机屏幕宽度（100vw）/手机屏幕中元素的宽</li><li>手机屏幕中元素宽度 = 设计稿元素宽度/设计稿宽度 * 100vw</li></ol></blockquote><ol start="4"><li>注意 ：使用插件变换为 vw 单位时， 首先要把插件中屏幕宽度改为设计稿的宽度；</li><li>开发流程；</li></ol><blockquote><ol><li>先用 px 来完成全部的布局效果；</li><li>再将 px 转为 vw；</li></ol></blockquote></blockquote><p> </p><ol start="2"><li><h6 id="rem-flexible-js" tabindex="-1">rem + flexible.js： <a class="header-anchor" href="#rem-flexible-js" aria-label="Permalink to &quot;rem + flexible.js：&quot;">​</a></h6></li></ol><blockquote><ol><li>rem：</li></ol><blockquote><ol><li>rem 是相对长度单位；</li><li>大小是相对于页面根标签 html 的字体大小；</li><li>谷歌浏览器默认的字体大小为 16px</li></ol></blockquote><ol start="2"><li>flexible：</li></ol><blockquote><ol><li>手机淘宝开发的 js 文件；</li><li>作用：检测屏幕大小，设置 html 的字体大小；</li><li>规定：10 rem = 屏幕的宽度；</li><li>计算公式</li></ol><blockquote><ol><li>设计稿宽度/设计稿中元素宽度 = 手机屏幕宽度（10 rem）/手机屏幕中元素的宽度</li><li>手机屏幕中元素宽度 = 设计稿元素宽度/设计稿宽度 * 10 rem</li></ol></blockquote><ol start="5"><li>开发流程：</li></ol><blockquote><ol><li>首先引入 flexible.js 文件；</li><li>再用 px 来完成全部的布局效果；</li><li>最后再将 px 转为 rem</li></ol></blockquote></blockquote></blockquote></blockquote></div>',3)]))}const q=o(a,[["render",r]]);export{n as __pageData,q as default};
