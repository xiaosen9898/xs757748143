import{_ as a,c as i,a2 as l,o as e}from"./chunks/framework.D3LXhGAZ.js";const d=JSON.parse('{"title":"webpack 打包工具","description":"","frontmatter":{},"headers":[],"relativePath":"engineering/xxxx.md/xxx.md","filePath":"engineering/xxxx.md/xxx.md"}'),t={name:"engineering/xxxx.md/xxx.md"};function p(n,s,o,c,r,k){return e(),i("div",null,s[0]||(s[0]=[l(`<h1 id="webpack-打包工具" tabindex="-1">webpack 打包工具 <a class="header-anchor" href="#webpack-打包工具" aria-label="Permalink to &quot;webpack 打包工具&quot;">​</a></h1><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>浏览器只认识 html、css、js、图片等资源</p></div><p> </p><h2 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>开发的时候，把浏览器不认识的文件打包成浏览器认识的文件，这样浏览器就能运行这些文件了</p></div><p> </p><h2 id="webpack-四个重点" tabindex="-1">webpack 四个重点 <a class="header-anchor" href="#webpack-四个重点" aria-label="Permalink to &quot;webpack 四个重点&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>入口、输出、插件、加载器</p></div><p> </p><h2 id="项目中配置-webpack" tabindex="-1">项目中配置 webpack <a class="header-anchor" href="#项目中配置-webpack" aria-label="Permalink to &quot;项目中配置 webpack&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><h4 id="_1-webpack-config-js-文件" tabindex="-1">1. webpack.config.js 文件 <a class="header-anchor" href="#_1-webpack-config-js-文件" aria-label="Permalink to &quot;1. webpack.config.js 文件&quot;">​</a></h4><blockquote><ol><li>webpack.config.js 是 webpack 的配置文件；</li><li>webpack 在真正开始打包构建之前，会先读取这个配置文件，根据给定的配置，进行项目打包；</li><li>文件自己添加，文件名称绝对不能修改</li></ol></blockquote><p> </p><h4 id="_2-基本步骤" tabindex="-1">2. 基本步骤 <a class="header-anchor" href="#_2-基本步骤" aria-label="Permalink to &quot;2. 基本步骤&quot;">​</a></h4><blockquote><ol><li>在项目根目录下创建名为 webpack.config.js 的 webpack 配置文件：</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;development&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 开发模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>在 package.json 中的 scripts 节点下，新增 dev 脚本：</li></ol><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;webpack&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="3"><li>把 dist 下的打包文件运行至浏览器，运行成功</li></ol></blockquote><p> </p><h4 id="_3-入口和出口" tabindex="-1">3. 入口和出口 <a class="header-anchor" href="#_3-入口和出口" aria-label="Permalink to &quot;3. 入口和出口&quot;">​</a></h4><blockquote><ol><li>webpack 配置了默认的打包的入口和出口：</li></ol><blockquote><ul><li>默认入口：src → index.js</li><li>默认出口：dist → main.js</li></ul><ol start="2"><li>修改入口和出口：</li></ol></blockquote><blockquote><ul><li>通过 entry 节点指定打包的入口</li><li>通过 output 节点指定打包的出口</li></ul></blockquote></blockquote></div><p> </p><h2 id="webpack-中配置插件" tabindex="-1">webpack 中配置插件 <a class="header-anchor" href="#webpack-中配置插件" aria-label="Permalink to &quot;webpack 中配置插件&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><h4 id="_1-webpack-dev-server-插件" tabindex="-1">1. webpack-dev-server 插件 <a class="header-anchor" href="#_1-webpack-dev-server-插件" aria-label="Permalink to &quot;1. webpack-dev-server 插件&quot;">​</a></h4><blockquote><ol><li>作用：</li></ol><blockquote><ol><li>在修改源代码的时候页面实现自动刷新(热重载)</li><li>通过配置可以自动打开浏览器</li></ol></blockquote><ol start="2"><li>配置：</li></ol><blockquote><ol><li>下载包：<code>npm i webpack-dev-server@3.11.0 -D</code>；</li><li>在 webpack.config.js 中添加配置：</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">devServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>修改 package.json -&gt; scripts 中的 dev 命令</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;webpack serve&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote><ol start="3"><li>使用：</li></ol><blockquote><ol><li>运行<code>npm run dev</code>命令，重新进行项目的打包；</li><li>在浏览器中访问 <code>http://localhost:8080</code> 地址，查看自动打包效果</li></ol></blockquote><ol start="4"><li>原理：</li></ol><blockquote><ol><li>资源(index.html、main.js)⇄(打包)托管到内存 ⇄(通知)浏览器刷新；</li><li>不配置 webpack-dev-server 的情况下，webpack 打包生成的文件，会存放到实际的物理磁盘上；</li><li>配置了 webpack-dev-server 之后，打包生成的文件存放到了内存中，托管到内存服务器中</li></ol></blockquote></blockquote><h4 id="_2-html-webpack-plugin-插件" tabindex="-1">2. html-webpack-plugin 插件 <a class="header-anchor" href="#_2-html-webpack-plugin-插件" aria-label="Permalink to &quot;2. html-webpack-plugin 插件&quot;">​</a></h4><blockquote><ol><li><p>作用：使用 HtmlWebpackPlugin 插件 自动引入打包后的资源文件到 html 文件</p></li><li><p>配置：</p></li></ol><blockquote><ol><li>下载包：<code>npm i --save-dev html-webpack-plugin</code>；</li><li>在 webpack.config.js 中引入插件并设置基本配置；</li><li>在 webpack.config.js 中添加插件的配置</li></ol></blockquote></blockquote></div><p> </p><h2 id="webpack-中配置-loader" tabindex="-1">webpack 中配置 loader <a class="header-anchor" href="#webpack-中配置-loader" aria-label="Permalink to &quot;webpack 中配置 loader&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>背景：在实际开发过程中，webpack 默认只能打包处理以 .js 后缀名结尾的模块，其他非 .js 后缀名结尾的模块，webpack 默认处理不了，需要调用 loader 加载器才可以正常打包</p></li><li><p>webpack 处理 css 文件：</p></li></ol><blockquote><ol><li>下载包：<code>css-loader,style-loader</code>；</li><li>在 webpack.config.js 的 module -&gt; rules 数组中添加配置；</li><li>重新运行脚本命令实现打包转换</li></ol></blockquote><ol start="3"><li><p>webpack 处理 less 预处理器文件</p></li><li><p>webpack 处理图片和图标</p></li><li><p>webpack 处理高版本 js 语法</p></li><li><p>webpack 处理 vue 单文件组件</p></li></ol></div>`,18)]))}const b=a(t,[["render",p]]);export{d as __pageData,b as default};
