import{_ as s,c as l,a2 as a,o as t}from"./chunks/framework.D3LXhGAZ.js";const c=JSON.parse('{"title":"多表查询","description":"","frontmatter":{},"headers":[],"relativePath":"sidebar/mysql/sql/queTables.md","filePath":"sidebar/mysql/sql/queTables.md"}'),e={name:"sidebar/mysql/sql/queTables.md"};function o(h,i,n,p,k,r){return t(),l("div",null,i[0]||(i[0]=[a(`<h1 id="多表查询" tabindex="-1">多表查询 <a class="header-anchor" href="#多表查询" aria-label="Permalink to &quot;多表查询&quot;">​</a></h1><h2 id="多表关系" tabindex="-1">多表关系 <a class="header-anchor" href="#多表关系" aria-label="Permalink to &quot;多表关系&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>一对一</li></ol><blockquote><ol><li>举例：用户与用户详情</li><li>实现：多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率</li></ol></blockquote><p> </p><ol start="2"><li>一对多</li></ol><blockquote><ol><li>举例：一个部门对多个员工</li><li>实现：在多的一方建立外键，指向一的一方的主键</li></ol></blockquote><p> </p><ol start="3"><li>多对多</li></ol><blockquote><ol><li>举例：一个学生可以选择两门课程，一门课程也可以被多个学生选择</li><li>实现：建立第三张表，中间表至少包含两个外键，分别关联两方主键</li></ol></blockquote></div><p> </p><h2 id="多表查询-1" tabindex="-1">多表查询 <a class="header-anchor" href="#多表查询-1" aria-label="Permalink to &quot;多表查询&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>定义：指从多张表中查询数据</p></li><li><p>笛卡尔积：两个集合组合后的情况，在多表查询时，需要消除无效笛卡尔积</p></li></ol><p> </p><h4 id="_1-连接查询" tabindex="-1">1. 连接查询 <a class="header-anchor" href="#_1-连接查询" aria-label="Permalink to &quot;1. 连接查询&quot;">​</a></h4><ol><li>内连接：相当于查询A、B交集部分数据</li></ol><blockquote><ol><li>隐式内连接：</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段列表 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表1, 表2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 条件;</span></span></code></pre></div><ol start="2"><li>显式内连接</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段列表 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表1 [inner] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 连接条件;</span></span></code></pre></div></blockquote><p> </p><ol start="2"><li>外连接：</li></ol><blockquote><ol><li>左外连接：查询左表所有数据，以及两张表交集部分数据</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段列表 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表1 left [outer] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表2 on条件;</span></span></code></pre></div><ol start="2"><li>右外连接：查询右表所有数据，以及两张表交集部分数据</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段列表 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表1 right [outer] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">join</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表2 on条件;</span></span></code></pre></div></blockquote><p> </p><ol start="3"><li>自连接：</li></ol><blockquote><ol><li>当前表与自身的连接查询，自连接必须使用表别名</li><li>把自身看成两张表，然后进行内连接或外连接操作，语法是一样的</li></ol></blockquote><p> </p><h4 id="_2-联合查询" tabindex="-1">2. 联合查询 <a class="header-anchor" href="#_2-联合查询" aria-label="Permalink to &quot;2. 联合查询&quot;">​</a></h4><ol><li><p>定义：就是把多次查询的结果合并起来，形成一个新的查询结果表</p></li><li><p>语法：</p></li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段列表 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表A ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [all]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 字段列表 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表 B ...;</span></span></code></pre></div><ol start="3"><li>注意：</li></ol><blockquote><ol><li>多张表的列数、字段类型需保持一致</li><li><code>union all</code>会将全部的数据直接合并在一起，<code>union</code>会合并后去重</li></ol></blockquote><p> </p><h4 id="_3-子查询" tabindex="-1">3. 子查询 <a class="header-anchor" href="#_3-子查询" aria-label="Permalink to &quot;3. 子查询&quot;">​</a></h4><ol><li><p>定义：sql语句中嵌套select语句，称为嵌套查询，又称子查询</p></li><li><p>语法：</p></li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> column1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t2);</span></span></code></pre></div><ol start="3"><li>根据子查询结果分为：</li></ol><blockquote><ol><li>标量子查询（子查询结果为单个值）</li></ol><blockquote><ul><li>常用的操作符：=、&lt;&gt;、&gt;、&gt;=、&lt;、&lt;=</li></ul></blockquote><ol start="2"><li>列子查询（子查询结果为一列）</li></ol><blockquote><ul><li>常用的操作符：in 、not in、any、some、all</li></ul></blockquote><ol start="3"><li>行子查询（子查询结果为一行）</li></ol><blockquote><ul><li>常用的操作符：= 、&lt;&gt;、 in 、not in</li></ul></blockquote><ol start="4"><li>表子查询（子查询结果为多行多列）</li></ol><blockquote><ul><li>常用的操作符：in</li></ul></blockquote></blockquote><ol start="4"><li>根据子查询位置：</li></ol><blockquote><ol><li>where之后</li><li>from之后</li><li>select之后</li></ol></blockquote><ul><li>注：子查询外部的语句可以是insert、update、delete、select的任何一个</li></ul></div>`,6)]))}const u=s(e,[["render",o]]);export{c as __pageData,u as default};
