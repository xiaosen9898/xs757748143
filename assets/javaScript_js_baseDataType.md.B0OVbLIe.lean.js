import{_ as e,c as i,a2 as l,o as s}from"./chunks/framework.D3LXhGAZ.js";const u=JSON.parse('{"title":"基本数据类型","description":"","frontmatter":{},"headers":[],"relativePath":"javaScript/js/baseDataType.md","filePath":"javaScript/js/baseDataType.md"}'),t={name:"javaScript/js/baseDataType.md"};function n(r,a,o,p,c,h){return s(),i("div",null,a[0]||(a[0]=[l(`<h1 id="基本数据类型" tabindex="-1">基本数据类型 <a class="header-anchor" href="#基本数据类型" aria-label="Permalink to &quot;基本数据类型&quot;">​</a></h1><h2 id="数值类型-number" tabindex="-1">数值类型 number <a class="header-anchor" href="#数值类型-number" aria-label="Permalink to &quot;数值类型 number&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>纯数字；</li><li>NaN；</li></ol><blockquote><ol><li>是 number 类型中的一个特殊的值, 表示非数字；</li><li>特点: 不等于任何值，包括自身；</li><li>isNaN(): 判断一个数据是否是 NaN,如果是得到 true, 如果不是得到一个 false</li></ol></blockquote><ol start="3"><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number" target="_blank" rel="noreferrer">Number API</a></li></ol></div><p> </p><h2 id="字符串类型-string" tabindex="-1">字符串类型 string <a class="header-anchor" href="#字符串类型-string" aria-label="Permalink to &quot;字符串类型 string&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>概念：用单引号或者双引号引起来的都是字符串数据</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String" target="_blank" rel="noreferrer">String API</a></p></li></ol></div><p> </p><h2 id="布尔类型-boolean" tabindex="-1">布尔类型 boolean <a class="header-anchor" href="#布尔类型-boolean" aria-label="Permalink to &quot;布尔类型 boolean&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>判断真假；</li><li>值只有两个：true 和 false</li></ol></div><p> </p><h2 id="undefined" tabindex="-1">undefined <a class="header-anchor" href="#undefined" aria-label="Permalink to &quot;undefined&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>变量声明未赋值, 值为 undefined.；</li><li>undefined 的值只有一个，那就是 undefined</li></ol></div><p> </p><h2 id="null" tabindex="-1">null <a class="header-anchor" href="#null" aria-label="Permalink to &quot;null&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>获取对象获取不到的时候；</li><li>null 的值只有一个，那就是 null</li></ol></div><p> </p><h2 id="基本数据类型检测" tabindex="-1">基本数据类型检测 <a class="header-anchor" href="#基本数据类型检测" aria-label="Permalink to &quot;基本数据类型检测&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>检测方法：<code>typeof 变量</code></p><p>基本使用：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Jack&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// string</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div>`,18)]))}const b=e(t,[["render",n]]);export{u as __pageData,b as default};
