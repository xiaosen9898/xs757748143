import{_ as i,c as a,a4 as l,o as n}from"./chunks/framework.BvVMNBiX.js";const t="/xs757748143/imgs/css/modcss/boxSizing.png",e="/xs757748143/imgs/css/view/boxShadow.png",b=JSON.parse('{"title":"现代 CSS","description":"","frontmatter":{},"headers":[],"relativePath":"html/htAdv/modCSS.md","filePath":"html/htAdv/modCSS.md"}'),p={name:"html/htAdv/modCSS.md"};function h(r,s,k,d,o,c){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="现代-css" tabindex="-1">现代 CSS <a class="header-anchor" href="#现代-css" aria-label="Permalink to &quot;现代 CSS&quot;">​</a></h1><h2 id="box-sizing" tabindex="-1">box-sizing <a class="header-anchor" href="#box-sizing" aria-label="Permalink to &quot;box-sizing&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>作用：使用<code>border-box</code>控制尺寸更加直观</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  box-sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+t+`" alt="效果图" data-fancybox=""></p></div><p> </p><h2 id="视口单位" tabindex="-1">视口单位 <a class="header-anchor" href="#视口单位" aria-label="Permalink to &quot;视口单位&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>作用：css3 支持使用<code>vw</code>和<code>vh</code>作为单位，分别表示<code>视口宽度</code>和<code>视口高度</code>，例如<code>1vh</code>表示视口高度的<code>1%</code>，<code>100vw</code>表示视口宽度的<code>100%</code></p></div><p> </p><h2 id="边框圆角" tabindex="-1">边框圆角 <a class="header-anchor" href="#边框圆角" aria-label="Permalink to &quot;边框圆角&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>边框圆角：通过设置<code>border-radius</code>，可以设置盒子的圆角</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 同时设置4个角的圆角，半径为10px */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 同时设置4个角的圆角，圆的横向半径为宽度一半，纵向半径为高度一半 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 分别设置左上、右上、右下、左下的圆角 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><p> </p><h2 id="伪元素选择器" tabindex="-1">伪元素选择器 <a class="header-anchor" href="#伪元素选择器" aria-label="Permalink to &quot;伪元素选择器&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>作用：通过<code>::before</code>和<code>::after</code>选择器，可以通过 css 给元素生成两个子元素</p><p>注意：伪元素必须要有<code>content</code>属性，否则不能生效，如果不需要有元素内容，设置<code>content:&#39;&#39;</code></p></div><p> </p><h2 id="平滑滚动" tabindex="-1">平滑滚动 <a class="header-anchor" href="#平滑滚动" aria-label="Permalink to &quot;平滑滚动&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>作用：使用<code>scroll-behavior: smooth</code>，可以让滚动更加丝滑</p></div><p> </p><h2 id="过渡" tabindex="-1">过渡 <a class="header-anchor" href="#过渡" aria-label="Permalink to &quot;过渡&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>过渡：使用过渡和动画，可以让 css 属性变化更加丝滑</p></li><li><p>语法：<code>transition: 过渡属性 持续时间 过渡函数 过渡延迟</code></p></li></ol><blockquote><ol><li>过渡属性：针对哪个 css 属性应用过渡。例如填写<code>transform</code>，则表示仅针对<strong>transform</strong>属性应用过渡。若填写<code>all</code>或不填写，则表示针对所有 css 属性都应用过渡</li><li>持续时间：css 属性变化所持续的时间，需要带上单位。例如<code>3s</code>表示 3 秒，<code>0.5s</code>或<code>500ms</code>均表示 500 毫秒</li><li>过渡函数：本质是 css 属性变化的贝塞尔曲线函数，通常直接使用预设值：</li></ol><blockquote><ul><li><code>ease-in-out</code>：平滑开始，平滑结束</li><li><code>linear</code>：线性变化</li><li><code>ease-in</code>：仅平滑开始</li><li><code>ease-out</code>：仅平滑结束</li></ul></blockquote><ol start="4"><li>过渡延迟：书写规则和持续时间一样，表示过渡效果延迟多久后触发，不填则无延迟</li></ol></blockquote><ul><li>在 JS 中，可以监听元素的<code>transitionstart</code>和<code>transitionend</code>事件，从而在过渡开始和过渡结束时做一些别的事情</li></ul></div><p> </p><h2 id="background" tabindex="-1">background <a class="header-anchor" href="#background" aria-label="Permalink to &quot;background&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>background-color：设置背景颜色</p></li><li><p>background-image：url(图片地址)：引入背景图片,可以引入多张，用逗号分割</p></li><li><p>background-repeat：repeat | no-repeat | repeat-x | repeat-y | round | space</p></li></ol><blockquote><ol><li>repeat (默认值）默认大小重复，会被裁剪；</li><li>no-repeat：不重复；</li><li>repeat-x：水平方向无变化重复；</li><li>repeat-y：垂直方向无变化重复；</li><li>round：图像会被压缩，尽可能的多的放入完整的背景；</li><li>space：图像会尽可能的重复，但是不会裁剪</li></ol></blockquote><ol start="4"><li>background-position： 为背景图片设置初始位置</li></ol><blockquote><ol><li>px；</li><li>百分比；</li><li>方位词</li></ol></blockquote><ol start="5"><li>background-origin：设置 background-position 的参照原点</li></ol><blockquote><ol><li>默认值 padding-box：背景区域以内边距为参考；</li><li>border-box：背景位置以边框为参考；</li><li>content-box：背景位置以内容区为参考</li></ol></blockquote><ol start="6"><li>background-size：设置背景图的大小</li></ol><blockquote><ol><li>cover（覆盖）：图片尽可能把当前元素覆盖，不留空白，可能出现裁剪；</li><li>contain（包含）：图片尽可能的展示在元素中，可能出现留白</li></ol></blockquote><ol start="7"><li>background-clip：设置元素的背景展示的区域</li></ol><blockquote><ol><li>border-box(默认值)：背景展示区域延申至边框；</li><li>padding-box：背景展示区域延申至 padding；</li><li>content-box：背景展示区域延申至 content；</li><li>text：背景被裁剪成文字的前景色</li></ol></blockquote><ol start="8"><li>background-attachment：决定背景图像的位置是在视口内固定，或者随着包含它的区块滚动</li></ol><blockquote><ol><li>scroll(默认值)：背景相对元素本身固定；</li><li>fixed：背景相对于视口固定，即使元素被滚动，背景不会跟随滚动 ；</li><li>local：背景会随着元素内容一起滚动</li></ol></blockquote></div><p> </p><h2 id="gradient" tabindex="-1">gradient <a class="header-anchor" href="#gradient" aria-label="Permalink to &quot;gradient&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>线性渐变 linear-gradient</li></ol><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 	linear-gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(渐变方向，颜色1 变化区间，颜色2 变化区间，。。。,颜色</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 变化区间 )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /* 基本写法 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   background-image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">： </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linear-gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       颜色1,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       颜色2,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       ......</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /* 透明渐变 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linear-gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        transparent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ol start="2"><li>径向渐变 radial-gradient</li></ol><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 	radial-gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(形状 半径大小 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 原点位置 ，渐变颜色1 边界，渐变颜色2 边界，。。。， 渐变颜色</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, 边界</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="3"><li>锥形渐变 conic-gradient (/ˈkɒnɪk/)</li></ol><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 	conic-gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 起始角度 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 中心位置， 角渐变断点)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><p> </p><h2 id="阴影" tabindex="-1">阴影 <a class="header-anchor" href="#阴影" aria-label="Permalink to &quot;阴影&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>盒子阴影：通过<code>box-shadow</code>属性可以设置整个盒子的阴影</li></ol><blockquote><p>取值：<code>水平偏移量</code>、<code>垂直偏移量</code>、<code>模糊半径</code>、<code>阴影颜色</code></p><p>效果：</p><p><img src="`+e+`" alt="效果图" data-fancybox=""></p></blockquote><p> </p><ol start="2"><li>文字阴影：通过<code>text-shadow</code>属性可以设置整个盒子的阴影</li></ol></div><p> </p><h2 id="平面转换" tabindex="-1">平面转换 <a class="header-anchor" href="#平面转换" aria-label="Permalink to &quot;平面转换&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>概念：使用位移、缩放、旋转、渐变效果丰富网页呈现方式</p></li><li><p>组成：x 和 y，2 条坐标轴组成的屏幕</p></li><li><p>方向：x 轴正值向右，y 轴正值向下</p></li><li><p>转换：改变盒子形态（位置、角度、大小）</p></li></ol><p> </p><h3 id="_1-平移" tabindex="-1">1. 平移 <a class="header-anchor" href="#_1-平移" aria-label="Permalink to &quot;1. 平移&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置x，y 轴偏移量 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置x位移方向 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置y位移方向 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置z位移方向 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p> </p><h3 id="_2-旋转" tabindex="-1">2. 旋转 <a class="header-anchor" href="#_2-旋转" aria-label="Permalink to &quot;2. 旋转&quot;">​</a></h3><ol><li><p>方向：正值顺时针，负值逆时针</p></li><li><p>单位：deg</p></li><li><p>转换中心点：transform-origin</p></li></ol><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(角度);           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置旋转角度 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*（px、百分比、方位词） */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置原点在盒子中心 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">left</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置原点在盒子左上角 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">right</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置原点在盒子右下角 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform-origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 设置原点在盒子坐标 (30, 60) 位置 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p> </p><h3 id="_3-缩放" tabindex="-1">3. 缩放 <a class="header-anchor" href="#_3-缩放" aria-label="Permalink to &quot;3. 缩放&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(倍数);           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 大于1，表示放大，小于1，表示缩小 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p> </p><h3 id="_4-多重转换" tabindex="-1">4. 多重转换 <a class="header-anchor" href="#_4-多重转换" aria-label="Permalink to &quot;4. 多重转换&quot;">​</a></h3><ol><li><p>概念：同时改变盒子的多个形态</p></li><li><p>注意：</p></li></ol><blockquote><ol><li>旋转放在最后;</li><li>旋转会改变坐标轴向;</li></ol></blockquote></div><p> </p><h2 id="_3d-变换" tabindex="-1">3D 变换 <a class="header-anchor" href="#_3d-变换" aria-label="Permalink to &quot;3D 变换&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>空间转换：使用 transform 属性实现元素在空间内的位移、旋转、缩放等效果</p></li><li><p>透视：使用 perspective 属性实现透视效果</p></li></ol><blockquote><ol><li>作用：空间转换时，为元素添加近大远小、近实远虚的视觉效果；</li><li>语法：perspective: 值; （添加给父级）；</li><li>取值：像素单位数值， 数值一般在 800 – 1200</li></ol></blockquote><p> </p><h4 id="空间位移" tabindex="-1">空间位移 <a class="header-anchor" href="#空间位移" aria-label="Permalink to &quot;空间位移&quot;">​</a></h4><ul><li>使用 translate 实现空间缩放效果</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">translateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p> </p><h4 id="空间旋转" tabindex="-1">空间旋转 <a class="header-anchor" href="#空间旋转" aria-label="Permalink to &quot;空间旋转&quot;">​</a></h4><ul><li>使用左手法则进行旋转</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotateX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotateY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotateZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   /* 用来设置自定义旋转轴的位置及旋转的角度（x，y，z 取值为 0-1 之间的数字）*/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rotate3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z, 角度度数);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p> </p><h4 id="空间缩放" tabindex="-1">空间缩放 <a class="header-anchor" href="#空间缩放" aria-label="Permalink to &quot;空间缩放&quot;">​</a></h4><ul><li>使用 scale 实现空间缩放效果</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scaleX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scaleY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scaleZ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scale3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, z);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p> </p><h4 id="立体呈现" tabindex="-1">立体呈现 <a class="header-anchor" href="#立体呈现" aria-label="Permalink to &quot;立体呈现&quot;">​</a></h4><ul><li>使用 transform-style: preserve-3d 呈现立体图形</li><li>注意：是给父元素添加 transform-style: preserve-3d</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   transform-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">preserve-3d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><p> </p><h2 id="滤镜" tabindex="-1">滤镜 <a class="header-anchor" href="#滤镜" aria-label="Permalink to &quot;滤镜&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li>filter</li></ol><table><thead><tr><th>滤镜</th><th style="min-width:60px;">含义</th><th>说明</th></tr></thead><tbody><tr><td>filter:blur(5px)</td><td>模糊</td><td> blur()函数支持任意长度值，但是不支持百分比值。<br> blur()函数的参数值表示高斯函数的标准偏差值，可以理解为屏幕上互相融合的像素数量。因此，blur()函数的参数值越大，图像的模糊效果越明显。 </td></tr><tr><td>filter:brightness(2.4)</td><td>亮度</td><td> brightness()函数的参数值支持数值和百分比值，范围是0到无穷大。参数值0或0%表示纯黑色，参数值1或100%表示正常的亮度，0～1或0%～100%的亮度是线性变化的。随着参数值逐渐大于1或大于100%，元素的亮度也会逐渐提升。 </td></tr><tr><td>filter:contrast(200%)</td><td>对比度</td><td> contrast()函数的参数值支持数值和百分比值，范围是0到无穷大。参数值0或0%表示毫无对比度，表现为纯灰色，色值是#808080，使用RGB色值表示为rgb(128,128,128)，也就是gray颜色关键字对应的色值。注意，这里说的是纯灰色，图像会直接变成一个灰色色块，而不是图像灰度。参数值1或100%表示正常的对比度。随着参数值逐渐大于1，元素的对比度也会逐渐提升。 </td></tr><tr><td>filter:drop-shadow(4px 4px 8px blue)</td><td>投影</td><td> 使用drop-shadow()函数可以给元素设置符合真实世界阴影规则的投影效果。<br> filter: drop-shadow(x偏移, y偏移, 模糊大小, 色值);<br> drop-shadow()函数不支持扩展，因为真实世界的投影是没有所谓的扩展的。<br> drop-shadow()函数没有内投影效果，而box-shadow属性可以使用inset关键字实现内阴影效果。<br> drop-shadow()函数不支持投影叠加，box-shadow属性则允许无限累加投影 </td></tr><tr><td>filter:grayscale(50%)</td><td>灰度</td><td> 使用grayscale()函数可以实现元素的去色效果，让所有彩色值变成灰度值。 grayscale()函数的参数值支持数值和百分比值，范围是0到无穷大。参数值为1或100%的时候表现为完全灰度；参数值大于1或100%的时候也表现为完全灰度。 </td></tr><tr><td>filter:hue-rotate(90deg)</td><td>色调旋转</td><td> hue-rotate()函数可以调整元素的色调，但饱和度和亮度保持不变<br> hue-rotate()函数的参数值支持角度值 </td></tr><tr><td>filter:invert(75%)</td><td>反相</td><td> invert()函数可以让元素的亮度和色调同时反转<br> invert()函数的参数值支持数值和百分比值，范围是0到无穷大。参数值为1或100%的时候图像表现为完全反相。单纯从语法上来说，值可以大于1或者大于100%，但是效果不会再进一步变化。0或0%表示正常的图像表现。 </td></tr><tr><td>filter:opacity(25%)</td><td>透明度</td><td> opacity()函数可以改变元素的透明度，效果和opacity属性类似<br> opacity()函数和opacity属性的区别在于，在部分浏览器中，使用opacity()函数可以启用硬件加速，性能会更好。不过由于opacity属性本身性能就非常好，因此没有任何必要使用opacity()函数。 </td></tr><tr><td>filter:saturate(230%)</td><td>饱和度</td><td> saturate()函数可以调整元素的饱和度<br> saturate()函数的参数值支持数值和百分比值，范围是0到无穷大。参数值0或0%表示毫无饱和度，表现为灰度效果，等同于grayscale(1)；参数值1或100%表示正常的饱和度；随着参数值逐渐大于1，元素的饱和度也会逐渐提升。 </td></tr><tr><td>filter:sepia(60%)</td><td>褐色</td><td> sepia()函数可以让元素的视觉效果向褐色靠拢<br> sepia()函数的参数值支持数值和百分比值，范围是0到无穷大。当参数值为1或100%，或者大于1或100%时，图像均表现为深褐色；当参数值为0或0%时，图像还是原始效果。 </td></tr></tbody></table><p> </p><ol start="2"><li>backdrop-filter</li></ol><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td>backdrop-filter: url(example.svg#filter);</td><td></td></tr><tr><td>backdrop-filter: blur(2px);</td><td></td></tr><tr><td>backdrop-filter: brightness(60%);</td><td></td></tr><tr><td>backdrop-filter: contrast(40%);</td><td></td></tr><tr><td>backdrop-filter: drop-shadow(4px 4px 10px blue);</td><td></td></tr><tr><td>backdrop-filter: grayscale(30%);</td><td></td></tr><tr><td>backdrop-filter: hue-rotate(120deg);</td><td></td></tr><tr><td>backdrop-filter: invert(70%);</td><td></td></tr><tr><td>backdrop-filter: opacity(20%);</td><td></td></tr><tr><td>backdrop-filter: sepia(90%);</td><td></td></tr><tr><td>backdrop-filter: saturate(80%);</td><td></td></tr></tbody></table><blockquote><ol><li><strong>backdrop-filter</strong> 用于处理元素的背景，而 <strong>filter</strong> 用于处理元素本身。</li><li><strong>backdrop-filter</strong> 主要用于创建背景模糊和透明效果，而 <strong>filter</strong> 用于对元素内部内容进行图像处理。</li><li><strong>backdrop-filter</strong> 通常与背景相关的属性一起使用，而 <strong>filter</strong> 则单独作用于元素。</li></ol></blockquote></div><p> </p><h2 id="css-遮罩" tabindex="-1">css 遮罩 <a class="header-anchor" href="#css-遮罩" aria-label="Permalink to &quot;css 遮罩&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>作用：它可以让一个元素按照某张图像的轮廓显示</p></li><li><p>属性：</p></li></ol><blockquote><ol><li>mask-image：用于定义一个元素的蒙版图像。将一个元素的可见部分限制在指定的形状或图案中</li><li>mask-repeat：遮罩区域是否重复</li></ol><blockquote><ol><li>repeat-x 表示水平方向平铺</li><li>repeat-y 表示垂直方向平铺</li><li>repeat 是默认值，表示水平和垂直方向均平铺</li><li>no-repeat 表示不平铺，会看到只有一个遮罩图形位于左上角</li><li>space 与 background 属性中的 space 的含义是类似的，表示遮罩图片尽可能地平铺，同时不进行任何剪裁</li><li>round 表示遮罩图片尽可能靠在一起，没有任何间隙，同时不进行任何剪裁。这意味着图片可能会产生缩放效果</li></ol></blockquote><ol start="3"><li>mask-position: 遮罩区域的位置，同 backgroud-postion</li><li>mask-clip: 确定遮罩在元素上的显示范围</li></ol><blockquote><ol><li>border-box：特点：蒙版将被剪裁到元素的边框盒（包括边框和内边距），超出边框盒的部分将不可见</li><li>padding-box：特点：蒙版将被剪裁到元素的内边框盒（包括内边距），超出内边框盒的部分将不可见</li><li>content-box：特点：蒙版将被剪裁到元素的内容框，超出内容框的部分将不可见</li><li>no-clip：特点：蒙版不被剪裁，将在整个元素上显示。超出元素的部分也会显示</li><li>fill-box：表示遮罩应用的区域是图形填充区域形成的边界盒子</li><li>stroke-box：表示的遮罩区域把描边占据的区域也包含在内</li><li>view-box：表示使用最近的 SVG 视口作为参考盒子、</li></ol></blockquote><ol start="5"><li>mask-origin: 蒙版的原点位置, 值同 mask-clip</li><li>mask-size: 用于设置遮罩蒙版的大小，类似与 background-size</li><li>mask-composite:</li></ol><blockquote><ol><li>add 表示遮罩累加，是默认值</li><li>subtract 表示遮罩相减，也就是遮罩图片重合的区域不显示。这就意味着，遮罩图片越多，遮罩区域越小</li><li>intersect 表示遮罩相交，也就是遮罩图片重合的区域才显示遮罩</li><li>exclude 表示遮罩排除，也就是遮罩图片重合的区域被当作透明的</li></ol></blockquote><ol start="8"><li>mask-mode 属性的默认值是 match-source，作用是根据资源的类型自动采用合适的遮罩模式。例如，如果遮罩效果使用的是 SVG 中的<code>&lt;mask&gt;</code>元素，则此时的 mask-mode 属性的计算值是 luminance，表示基于亮度判断是否要进行遮罩。如果是其他场景，则计算值是 alpha，表示基于透明度判断是否要进行遮罩</li></ol></blockquote></div><p> </p><h2 id="clip-path-裁剪" tabindex="-1">clip-path 裁剪 <a class="header-anchor" href="#clip-path-裁剪" aria-label="Permalink to &quot;clip-path 裁剪&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>作用：制作各种形状的元素</p></li><li><p>语法：<code>clip-path: inset()</code></p></li><li><p>使用：</p></li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-paYU0" id="tab-V7_720l" checked><label data-title="圆形" for="tab-V7_720l">圆形</label><input type="radio" name="group-paYU0" id="tab-BlMSW_E"><label data-title="椭圆" for="tab-BlMSW_E">椭圆</label><input type="radio" name="group-paYU0" id="tab-0rnQ2Q2"><label data-title="多边形ploygon" for="tab-0rnQ2Q2">多边形ploygon</label></div><div class="blocks"><div class="language-css vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   clip-path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">circle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(半径 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">at</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   clip-path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ellipse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(水平半径 垂直半径 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">at</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selector {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   clip-path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: ploygon(x1 y1, x2 y2, x3 y3, ...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div></div>`,42)]))}const g=i(p,[["render",h]]);export{b as __pageData,g as default};
