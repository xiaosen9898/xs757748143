import{_ as o,c as t,a2 as i,o as a}from"./chunks/framework.D3LXhGAZ.js";const b=JSON.parse('{"title":"标准流","description":"","frontmatter":{},"headers":[],"relativePath":"html/ht/stanFlow.md","filePath":"html/ht/stanFlow.md"}'),e={name:"html/ht/stanFlow.md"};function c(s,l,r,u,p,h){return a(),t("div",null,l[0]||(l[0]=[i('<h1 id="标准流" tabindex="-1">标准流 <a class="header-anchor" href="#标准流" aria-label="Permalink to &quot;标准流&quot;">​</a></h1><h2 id="视觉格式化模型" tabindex="-1">视觉格式化模型 <a class="header-anchor" href="#视觉格式化模型" aria-label="Permalink to &quot;视觉格式化模型&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>概念：页面中的多个盒子排列规则</p></li><li><p>盒子排列的三张方式：</p></li></ol><blockquote><ol><li>标准流</li><li>浮动</li><li>定位</li></ol></blockquote></div><p> </p><h2 id="标准流-1" tabindex="-1">标准流 <a class="header-anchor" href="#标准流-1" aria-label="Permalink to &quot;标准流&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><ol><li><p>概念：又称文档流，是浏览器在渲染显示网页内容时默认采用的一套排版规则，规定了应该以何种方式排列元素</p></li><li><p>常见排版规则：</p></li></ol><blockquote><ol><li>块级元素：从上往下，垂直布局，独占一行；</li><li>行内元素和行内块元素，从左往右，水平布局，空间不够自动折行</li></ol></blockquote></div><p> </p><h2 id="包含块" tabindex="-1">包含块 <a class="header-anchor" href="#包含块" aria-label="Permalink to &quot;包含块&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>概念：每个盒子都有它的包含块，包含块决定了盒子的排列区域</p><ul><li>大部分情况下，盒子的包含块，是该盒子父元素的内容盒</li></ul></div><p> </p><h2 id="标准流布局" tabindex="-1">标准流布局 <a class="header-anchor" href="#标准流布局" aria-label="Permalink to &quot;标准流布局&quot;">​</a></h2><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p></p><p>总体规则：块盒独占一行，行盒水平依次排列</p><ol><li>块盒：每个块盒的总宽度，刚好等于包含块的宽度；</li></ol><blockquote><ol><li>auto：将剩余的宽或高分配给该元素；</li><li>宽度的默认值是 auto；</li><li>width 优先分配，才到 margin</li><li>如果宽度、边框、内边距计算后，还有剩余像素，那剩余的会分配给 margin；</li></ol></blockquote><ol start="2"><li>每个块盒垂直方向上的 auto 值</li></ol><blockquote><ol><li>height: auto：适应内容的高度；</li><li>magin: auto：为 0</li></ol></blockquote><ol start="3"><li>百分比取值</li></ol><blockquote><ol><li>宽度：</li></ol><blockquote><ul><li>padding、width、margin 可以使用百分比取值，且值是相对于包含块的宽度；</li></ul></blockquote><ol start="2"><li>高度：</li></ol><blockquote><ol><li>包含块的高度取决于子元素的高度时，设置百分比无效；</li><li>包含块的高度不取决于子元素的高度时，百分比相对于父元素高度</li></ol></blockquote></blockquote><ol start="4"><li>上下外边距合并现象</li></ol><blockquote><ul><li>标准流中，两个块盒的上下外边距会合并，且值取两个外边距大的那个</li></ul></blockquote></div>',12)]))}const d=o(e,[["render",c]]);export{b as __pageData,d as default};
